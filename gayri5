# 2. Average Order Value (average_order_value = total_price / total_transaction)
# 3. Purchase Frequency (total_transaction / total_number_of_customers)
# 4. Repeat Rate & Churn Rate (birden fazla alışveriş yapan müşteri sayısı / tüm müşteriler)
# 5. Profit Margin (profit_margin =  total_price * 0.10)
# 6. Customer Value (customer_value = average_order_value * purchase_frequency)
# 7. Customer Lifetime Value (CLTV = (customer_value / churn_rate) x profit_margin)


import pandas as pd
from sklearn.preprocessing import MinMaxScaler
pd.set_option("display.max_columns",None)
pd.set_option("display.float_format", lambda x: "%.3f" % x)

df_=pd.read_excel(r"C:\Users\SEFA\PycharmProjects\pythonProject\CRM ANALYTICS\Documents\crmAnalytics\datasets\online_retail_II.xlsx",sheet_name="Year 2009-2010")
df=df_.copy()

df.isnull().sum()
df=df[~df["Invoice"].str.contains("C",na=False)]
df.describe()
df=df[(df["Quantity"]>0)]
df=df.dropna()
df["Total_Price"]=df["Quantity"]*df["Price"]

cltv_c=df.groupby("Customer ID").agg({"Total_Price":lambda price:price.sum(),
                               "Quantity": lambda quan:quan.sum(),
                               "Invoice": lambda invo: invo.nunique()})


cltv_c.columns=["total_price","total_unit","total_transaction"]
#average order value hesabı
cltv_c["average_order_value"]=cltv_c["total_price"]/cltv_c["total_transaction"]

#purchase frequency
cltv_c["purchase_frequency"]=cltv_c["total_transaction"]/cltv_c.shape[0]

#repeat and churn rate

repeat_rate=cltv_c[cltv_c["total_transaction"]>1].shape[0]/cltv_c.shape[0]
churn_rate=1-repeat_rate

#profit margin ( %10)

cltv_c["profit_margin"]=cltv_c["total_price"]*0.1

#Customer Value

cltv_c["customer_value"]=cltv_c["average_order_value"]*cltv_c["purchase_frequency"]

#Customer LifeTime Value
cltv_c["CLTV"]= (cltv_c["customer_value"]/churn_rate) * cltv_c["profit_margin"]

#verileri sıralama
cltv_c.sort_values("CLTV",ascending=False)



#Creating Segments
cltv_c["segment"]=pd.qcut(cltv_c["CLTV"],4,labels=["D","C","B","A"])


cltv_c.groupby("segment").agg({"count","sum","mean"})


cltv_c.to_excel("cltv.xlsx")

#fonksiyonlaştırma

def Cltv_segmentation(df,profit_rate=0.1):
    df=df[~df["Invoice"].astype(str).str.contains("C",na=False)]
    df=df[df["Quantity"]>0]
    df = df.dropna()
    df["Total_Price"] = df["Quantity"]*df["Price"]

    cltv_c = df.groupby("Customer ID").agg({"Total_Price": lambda price: price.sum(),
                                            "Quantity": lambda quan: quan.sum(),
                                            "Invoice": lambda invo: invo.nunique()})

    cltv_c.columns = ["total_price", "total_unit", "total_transaction"]

    # average order value hesabı
    cltv_c["average_order_value"] = cltv_c["total_price"] / cltv_c["total_transaction"]

    # purchase frequency
    cltv_c["purchase_frequency"] = cltv_c["total_transaction"] / cltv_c.shape[0]

    # repeat and churn rate

    repeat_rate = cltv_c[cltv_c["total_transaction"] > 1].shape[0] / cltv_c.shape[0]
    churn_rate = 1 - repeat_rate

    # profit margin ( %10)

    cltv_c["profit_margin"] = cltv_c["total_price"] * profit_rate

    # Customer Value

    cltv_c["customer_value"] = cltv_c["average_order_value"] * cltv_c["purchase_frequency"]

    # Customer LifeTime Value
    cltv_c["CLTV"] = (cltv_c["customer_value"] / churn_rate) * cltv_c["profit_margin"]

    # Creating Segments
    cltv_c["segment"] = pd.qcut(cltv_c["CLTV"], 4, labels=["D", "C", "B", "A"])

    return cltv_c


df1=Cltv_segmentation(df)

